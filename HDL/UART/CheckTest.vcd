$date
	Tue Dec 24 18:36:47 2024
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ns
$end

$scope module ErrorCheck_tb $end
$var reg 1 ! reset_n $end
$var reg 1 " recieved_flag $end
$var reg 1 # parity_bit $end
$var reg 1 $ start_bit $end
$var reg 1 % stop_bit $end
$var reg 2 & parity_type [1:0] $end
$var reg 8 ' raw_data [7:0] $end
$var wire 1 ( error_flag [2] $end
$var wire 1 ) error_flag [1] $end
$var wire 1 * error_flag [0] $end
$var integer 32 + i $end

$scope module dut $end
$var parameter 2 , ODD $end
$var parameter 2 - EVEN $end
$var parameter 2 . NOPARITY00 $end
$var parameter 2 / NOPARITY11 $end
$var wire 1 0 reset_n $end
$var wire 1 1 recieved_flag $end
$var wire 1 2 parity_bit $end
$var wire 1 3 start_bit $end
$var wire 1 4 stop_bit $end
$var wire 1 5 parity_type [1] $end
$var wire 1 6 parity_type [0] $end
$var wire 1 7 raw_data [7] $end
$var wire 1 8 raw_data [6] $end
$var wire 1 9 raw_data [5] $end
$var wire 1 : raw_data [4] $end
$var wire 1 ; raw_data [3] $end
$var wire 1 < raw_data [2] $end
$var wire 1 = raw_data [1] $end
$var wire 1 > raw_data [0] $end
$var reg 3 ? error_flag [2:0] $end
$var reg 1 @ error_parity $end
$var reg 1 A parity_flag $end
$var reg 1 B start_flag $end
$var reg 1 C stop_flag $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
0$
0%
b0 &
b100100 '
b0 ?
1@
0A
0B
0C
b1 ,
b10 -
b0 .
b11 /
b0 +
0*
0)
0(
0>
0=
1<
0;
0:
19
08
07
06
05
04
03
02
01
00
$end
#10
1!
1"
10
11
1A
1C
b101 ?
1*
1(
#50
b1 +
b1 &
b1101 '
1>
1;
09
16
0@
0A
b100 ?
0*
#100
b10 +
b10 &
b1 '
0<
0;
06
15
1@
1A
b101 ?
1*
#150
b11 +
b11 &
b11101101 '
1<
1;
19
18
17
16
#200
b100 +
